<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MenuMapper">
	<select id="selectSystemMenuList" parameterType="BMap" resultType="BMap">
	<![CDATA[
	/* Menu.xml -> selectSystemMenuList */
		SELECT DISTINCT E.SYSTEM_CD,
		       E.SYSTEM_CD PROG_CD,
		       CASE WHEN #{LANG} = 'FR' THEN E.SYSTEM_FR
		            WHEN #{LANG} = 'EN' THEN E.SYSTEM_EN
		       ELSE E.SYSTEM_NM
		       END AS PROG_NM,
		       E.PRIORITY
		  FROM SY_POLICY_U A 
	INNER JOIN SY_POLICY_H B 
		    ON A.COMP_CD      =   B.COMP_CD
		   AND A.POLICY_CD    =   B.POLICY_CD
		   AND B.STATUS       =   'Y'
	INNER JOIN SY_POLICY_L C 
		    ON A.COMP_CD      =   C.COMP_CD
		   AND A.POLICY_CD    =   C.POLICY_CD
		   AND C.STATUS       =   'Y'
	INNER JOIN SY_PROGRAM D 
		    ON A.COMP_CD      =   D.COMP_CD
		   AND C.SYSTEM_CD    =   D.SYSTEM_CD
		   AND C.PROG_CD      =   D.PROG_CD
		   AND D.PROG_LV	  <>  '2'
		   AND D.STATUS       =   'Y'
	INNER JOIN SY_SYSTEM E 
		    ON D.COMP_CD      =   E.COMP_CD
		   AND D.SYSTEM_CD    =   E.SYSTEM_CD
		   AND E.STATUS 	  =   'Y'
		 WHERE A.COMP_CD = #{COMP_CD}
		   AND A.USER_ID = #{USER_ID}
		   AND A.STATUS  = 'Y'
		   AND E.SYSTEM_CD != 'BM' /*Book Mark는 상단 메뉴에서 제외 */
	  ORDER BY E.PRIORITY
	]]>
	</select>
	
	<select id="selectMenuList" parameterType="BMap" resultType="BMap">
	/* Menu.xml -> selectMenuList */
		SELECT * 
		  FROM (SELECT DISTINCT E.SYSTEM_CD,
					   E.SYSTEM_CD PROG_CD,
				       CASE WHEN #{LANG} = 'FR' THEN E.SYSTEM_FR
				            WHEN #{LANG} = 'EN' THEN E.SYSTEM_EN
				       ELSE E.SYSTEM_NM
				       END AS PROG_NM,
					   '' PROG_URL,
					   0 LV,
					   E.PRIORITY,
					   0 PROG_PRIORITY,
					   '' PROG_GROUP
				  FROM SY_POLICY_U A 
			INNER JOIN SY_POLICY_H B 
					ON A.COMP_CD      =   B.COMP_CD
				   AND A.POLICY_CD    =   B.POLICY_CD
				   AND B.STATUS		  =	  'Y'
			INNER JOIN SY_POLICY_L C 
					ON A.COMP_CD      =   C.COMP_CD
				   AND A.POLICY_CD    =   C.POLICY_CD
				   AND C.STATUS		  =	  'Y'
			INNER JOIN SY_PROGRAM D 
					ON A.COMP_CD      =   D.COMP_CD
				   AND C.SYSTEM_CD    =   D.SYSTEM_CD
				   AND C.PROG_CD      =   D.PROG_CD
				   AND D.STATUS		  =	  'Y'
			INNER JOIN SY_SYSTEM E 
					ON D.COMP_CD      =   E.COMP_CD
				   AND D.SYSTEM_CD    =   E.SYSTEM_CD
				   AND E.STATUS		  =	  'Y'
				 WHERE A.COMP_CD      =   #{COMP_CD}
				   AND A.USER_ID	  =   #{USER_ID}
				   AND A.STATUS       =   'Y'
				UNION ALL
				SELECT DISTINCT E.SYSTEM_CD,
					   D.PROG_GROUP PROG_CD,
					   CASE WHEN #{LANG} = 'FR' THEN D.PROG_FR
					        WHEN #{LANG} = 'EN' THEN D.PROG_EN
					   ELSE D.PROG_NM
					   END AS PROG_NM,
					   '' PROG_URL,
					   1 LV,
					   E.PRIORITY,
					   0 PROG_PRIORITY,
					   D.PROG_GROUP
				  FROM SY_PROGRAM D 
			INNER JOIN SY_SYSTEM E 
					ON D.COMP_CD      =   E.COMP_CD
				   AND D.SYSTEM_CD    =   E.SYSTEM_CD
				   AND E.STATUS		  =	  'Y'
				 WHERE D.PROG_LV      =   '0'
				   AND D.STATUS		  =	  'Y'
				   AND D.PROG_CD IN (SELECT D.PROG_GROUP
									   FROM SY_POLICY_U A
								 INNER JOIN SY_POLICY_H B
										 ON A.COMP_CD      =   B.COMP_CD
									    AND A.POLICY_CD    =   B.POLICY_CD
									    AND B.STATUS	   =	  'Y'
								 INNER JOIN SY_POLICY_L C
										 ON A.COMP_CD      =   C.COMP_CD
									    AND A.POLICY_CD    =   C.POLICY_CD
									    AND C.STATUS	   =	  'Y'
								 INNER JOIN SY_PROGRAM D
										 ON A.COMP_CD      =   D.COMP_CD
									    AND C.SYSTEM_CD    =   D.SYSTEM_CD
									    AND C.PROG_CD      =   D.PROG_CD
									    AND D.STATUS	   =	  'Y'
								 INNER JOIN SY_SYSTEM E
										 ON D.COMP_CD      =   E.COMP_CD
									    AND D.SYSTEM_CD    =   E.SYSTEM_CD
									    AND E.STATUS	   =	  'Y'
									  WHERE A.COMP_CD      =   #{COMP_CD}
	 								    AND A.USER_ID	   =   #{USER_ID}
									    AND D.PROG_LV      =   '1'
									    AND A.STATUS	   =  'Y')
				UNION ALL
				SELECT E.SYSTEM_CD,
					   D.PROG_CD,
					   CASE WHEN #{LANG} = 'FR' THEN D.PROG_FR
					        WHEN #{LANG} = 'EN' THEN D.PROG_EN
					   ELSE D.PROG_NM
					   END AS PROG_NM,
					   D.PROG_URL,
					   2 LV,
					   E.PRIORITY,
					   D.PRIORITY PROG_PRIORITY,
					   D.PROG_GROUP
				  FROM SY_POLICY_U A 
			INNER JOIN SY_POLICY_H B 
					ON A.COMP_CD      =   B.COMP_CD
				   AND A.POLICY_CD    =   B.POLICY_CD
				   AND B.STATUS		  =	  'Y'
			INNER JOIN SY_POLICY_L C 
					ON A.COMP_CD      =   C.COMP_CD
				   AND A.POLICY_CD    =   C.POLICY_CD
				   AND C.STATUS		  =	  'Y'
			INNER JOIN SY_PROGRAM D 
					ON A.COMP_CD      =   D.COMP_CD
				   AND C.SYSTEM_CD    =   D.SYSTEM_CD
				   AND C.PROG_CD      =   D.PROG_CD
				   AND D.STATUS		  =	  'Y'
			INNER JOIN SY_SYSTEM E 
					ON D.COMP_CD      =   E.COMP_CD
				   AND D.SYSTEM_CD    =   E.SYSTEM_CD
				   AND E.STATUS		  =	  'Y'
				 WHERE A.COMP_CD      =   #{COMP_CD}
				   AND A.USER_ID	  =   #{USER_ID}
				   AND D.PROG_LV      =   '1'
				   AND A.STATUS		  =	  'Y'
			 UNION ALL
			    SELECT SYSTEM_CD, 
					   PROG_CD, 
					   CASE WHEN #{LANG} = 'FR' THEN PROG_FR
					        WHEN #{LANG} = 'EN' THEN PROG_EN
					   ELSE PROG_NM
					   END AS PROG_NM,
					    '', 
						'1', 
						'0', 
						0, 
						PROG_GROUP 
				  FROM SY_PROGRAM 
				 WHERE PROG_GROUP = 'BM02'
			 UNION ALL
			    SELECT 'SY',
			           MY.PROG_CD,
			           CASE WHEN #{LANG} = 'FR' THEN PRO.PROG_FR
					        WHEN #{LANG} = 'EN' THEN PRO.PROG_EN
					   ELSE PRO.PROG_NM
					   END AS PROG_NM,
			           PRO.PROG_URL,
			           2,
			           '0',
			           MY.PRIORITY,
			           'BM02'
			      FROM SY_MYMENU MY 
	        INNER JOIN SY_PROGRAM PRO 
	                ON MY.PROG_CD = PRO.PROG_CD
	               AND MY.USER_ID = #{USER_ID}) A
	 GROUP BY SYSTEM_CD, PROG_CD, PROG_NM, PROG_URL, LV, PRIORITY, PROG_PRIORITY, PROG_GROUP
	 ORDER BY PRIORITY, CASE WHEN PROG_GROUP = 'BB' THEN 4
	 						 WHEN PROG_GROUP = 'HO' THEN 1
							 WHEN PROG_GROUP = 'RV' THEN 2
							 WHEN PROG_GROUP = 'PR' THEN 3 
							 WHEN PROG_GROUP = 'SY' THEN 5
						ELSE 0
						END,
			   LV, PROG_PRIORITY
	</select>
	
	<select id="selectButtonList" parameterType="BMap" resultType="BMap">
	/* Menu.xml -> selectButtonList */
		SELECT B.AUTH, C.PROG_LV
	      FROM SY_POLICY_U A 
	INNER JOIN SY_POLICY_L B 
		    ON A.COMP_CD = B.COMP_CD
		   AND A.POLICY_CD = B.POLICY_CD
		   AND B.STATUS = 'Y'
	INNER JOIN SY_PROGRAM C 
	        ON B.COMP_CD = C.COMP_CD
	       AND B.SYSTEM_CD = C.SYSTEM_CD
	       AND B.PROG_CD = C.PROG_CD
	       AND C.STATUS ='Y'
		 WHERE A.COMP_CD = #{COMP_CD}
		   AND A.USER_ID = #{USER_ID}
		   AND B.PROG_CD = #{PROG_CD}
		   AND A.STATUS = 'Y'
	</select>
	
	<select id="selectAuth" parameterType="BMap" resultType="String">
	/* Menu.xml -> selectAuth */
	SELECT STUFF((SELECT ',' + POLICY_CD 
					FROM SY_POLICY_U 
					WHERE USER_ID = #{USER_ID} FOR XML PATH('')), 1,1,'') AS AUTH
	</select>
	
</mapper>